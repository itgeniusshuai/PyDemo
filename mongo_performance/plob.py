#  -*- coding: utf-8 -*-
#  mongodb性能测试
from matplotlib.font_manager import FontProperties
font = FontProperties(fname = r"C:\Windows\Fonts\STXINWEI.TTF",  size=14)
import numpy as np  
import matplotlib.pyplot as plt  
# X轴, Y轴数据
y_5000 = [130, 211, 205, 201, 174, 177, 178, 182, 157, 138, 137, 134, 233, 144, 138, 133, 148, 146, 132, 129, 130, 143, 130, 155, 198, 135, 132, 130, 283, 190, 153, 178, 155, 160, 133, 130, 130, 139, 131, 131, 133, 162, 131, 132, 151, 195, 254, 155, 132, 134, 171, 153, 137, 136, 164, 149, 130, 139, 150, 142, 159, 134, 131, 134, 152, 166, 154, 214, 131, 132, 138, 242, 208, 165, 128, 129, 144, 144, 141, 141, 229, 158, 127, 141, 152, 133, 137, 138, 130, 132, 136, 134, 126, 145, 140, 132, 128, 134, 143, 127, 130, 157, 132, 140, 184, 142, 132, 131, 137, 136, 145, 133, 141, 130, 129, 129, 149, 187, 199, 143, 132, 132, 142, 131, 125, 136, 142, 145, 127, 133, 146, 128, 129, 130, 142, 125, 135, 144, 164, 217, 208, 135, 143, 150, 158, 129, 130, 156, 135, 130, 186, 181, 198, 206, 131, 132, 140, 133, 130, 179, 148, 153, 130, 142, 132, 128, 135, 145, 135, 133, 146, 137, 133, 130, 132, 138, 128, 131, 170, 139, 131, 129, 139, 131, 128, 134, 139, 163, 133, 176, 203, 135, 144, 127, 128, 154, 139, 130, 133, 141, 137, 126, 131, 133, 153, 130, 136, 186, 154, 143, 140, 128, 148, 133, 136, 127, 135, 132, 145, 171, 170, 190, 130, 126, 148, 136, 227, 149, 145, 168, 192, 172, 178, 181, 164, 161, 173, 179, 187, 177, 171, 235, 197, 178, 185, 207, 162, 218, 260, 203, 181, 166, 184, 168, 306, 183, 163, 184, 185, 165, 183, 165, 195, 224, 199, 173, 150, 158, 167, 175, 165, 194, 183, 165, 182, 165, 155, 170, 163, 169, 174, 193, 179, 291, 173, 172, 164, 155, 166, 197, 166, 181, 157, 132, 136, 127, 128, 130, 158, 129, 136, 137, 141, 131, 133, 144, 152, 131, 139, 150, 146, 154, 143, 136, 132, 153, 137, 150, 212, 157, 179, 133, 137, 148, 132, 137, 142, 131, 128, 136, 133, 126, 153, 138, 132, 131, 134, 140, 132, 131, 156, 136, 132, 131, 138, 135, 131, 130, 137, 143, 130, 132, 141, 131, 130, 210, 156, 131, 140, 137, 132, 133, 138, 126, 129, 131, 157, 130, 129, 131, 143, 128, 128, 131, 135, 148, 131, 139, 132, 173, 162, 144, 129, 145, 137, 132, 128, 131, 138, 130, 130, 134, 161, 203, 140, 141, 133, 175, 140, 139, 145, 144, 140, 140, 135, 130, 133, 129, 129, 151, 130, 132, 133, 137, 131, 132, 133, 156, 134, 136, 134, 133, 129, 132, 136, 188, 282, 167, 196, 168, 130, 130, 130, 137, 130, 142, 131, 137, 130, 131, 130, 134, 130, 149, 126, 129, 131, 132, 135, 131, 134, 127, 152, 131, 132, 126, 137, 132, 133, 129, 155, 131, 134, 130, 136, 130, 158, 207, 132, 147, 137, 128, 130, 131, 135, 132, 129, 148, 138, 129, 128, 131, 138, 130, 130, 134, 150, 128, 130, 134, 133, 133, 131, 134, 150, 131, 130, 135, 131, 129, 131, 2041, 539, 505, 264, 238, 301, 189, 190, 206, 205, 180, 171, 242, 317, 199, 186, 192, 165, 199, 231, 202, 192, 189, 219, 222, 298, 233, 252, 178, 183, 181, 180, 198, 201, 177, 198, 224, 209, 254, 205, 163, 261, 211, 226, 269, 202, 175, 197, 214, 179, 195, 205, 231, 182, 176, 184, 178, 179, 183, 191, 188, 200, 187, 197, 283, 179, 182, 161, 160, 199, 199, 178, 183, 165, 202, 195, 180, 192, 195, 213, 174, 178, 185, 183, 171, 183, 178, 193, 381, 286, 191, 201, 177, 174, 183, 175, 173, 205, 186, 171, 186, 199, 183, 166, 179, 198, 185, 179, 211, 185, 189, 185, 190, 182, 177, 192, 199, 174, 175, 179, 177, 183, 183, 179, 211, 193, 189, 204, 201, 170, 184, 197, 207, 178, 168, 181, 186, 182, 176, 176, 205, 185, 179, 193, 192, 175, 216, 235, 210, 166, 216, 233, 169, 185, 232, 197, 199, 172, 213, 218, 162, 178, 180, 173, 198, 168, 181, 176, 184, 168, 175, 181, 186, 199, 237, 199, 173, 174, 202, 178, 168, 193, 215, 170, 184, 218, 216, 192, 179, 210, 181, 173, 164, 185, 180, 175, 175, 198, 175, 171, 178, 177, 170, 171, 171, 186, 239, 175, 185, 175, 205, 174, 169, 184, 211, 179, 173, 174, 183, 179, 171, 173, 185, 198, 179, 182, 176, 177, 173, 172, 165, 189, 165, 177, 183, 195, 191, 167, 207, 200, 180, 183, 178, 189, 175, 192, 175, 176, 173, 199, 177, 189, 204, 174, 149, 192, 181, 173, 166, 182, 170, 181, 179, 216, 180, 206, 209, 302, 293, 207, 263, 177, 187, 181, 197, 292, 177, 184, 180, 199, 197, 173, 215, 215, 198, 230, 240, 225, 174, 188, 173, 198, 217, 174, 168, 215, 179, 180, 172, 173, 202, 194, 183, 176, 171, 191, 182, 176, 192, 208, 164, 190, 166, 169, 200, 207, 192, 209, 174, 215, 199, 182, 205, 201, 196, 205, 201, 197, 217, 226, 227, 273, 183, 184, 213, 166, 180, 186, 178, 191, 213, 187, 196, 165, 256, 264, 185, 183, 202, 186, 184, 185, 180, 177, 206, 208, 173, 175, 172, 188, 172, 188, 197, 187, 156, 177, 173, 206, 195, 179, 167, 201, 195, 194, 184, 180, 225, 193, 210, 173, 168, 191, 230, 231, 175, 169, 196, 180, 185, 174, 188, 192, 174, 191, 225, 194, 178, 185, 240, 222, 188, 251, 369, 192, 200, 167, 185, 197, 251, 196, 178, 180, 171, 178, 217, 188, 185, 196, 179, 202, 297, 176, 201, 250, 216, 190, 197, 199, 205, 200, 172, 199, 181, 167, 179, 200, 187, 175, 202, 204, 182, 196, 233, 171, 182, 203, 269, 277, 176, 188, 228, 161, 171, 219, 200, 234, 211, 178, 172, 176, 198, 183, 181, 176, 208, 171, 176, 174, 192, 190, 178, 166, 175, 205, 219, 168, 182, 206, 189, 202, 186, 195, 239, 183, 233, 185, 182, 197, 180, 234, 183, 162, 176, 169, 189, 170, 180, 180, 256, 193]
y1_5000 = y_5000[:500]
y2_5000 = y_5000[-500:]
x_5000 = [i for i in range(500) ]
y1_20000 = [2593, 803, 723, 864, 616, 669, 539, 670, 660, 693, 603, 638, 633, 626, 622, 562, 663, 537, 627, 558, 604, 620, 689, 570, 653, 564, 600, 556, 625, 706, 689, 721, 762, 701, 561, 641, 569, 766, 604, 635, 649, 736, 585, 744, 616, 729, 572, 628, 573, 618, 557, 618, 651, 644, 758, 555, 789, 741, 827, 710, 747, 883, 785, 655, 628, 576, 620, 571, 735, 563, 600, 616, 608, 589, 596, 782, 837, 810, 550, 720, 751, 672, 546, 699, 633, 644, 621, 639, 583, 634, 563, 619, 650, 609, 569, 649, 615, 585, 639, 558, 1250, 536, 627, 637, 634, 576, 610, 542, 657, 597, 628, 595, 618, 542, 620, 571, 609, 645, 616, 537, 649, 620, 564, 626, 560, 647, 607, 626, 609, 629, 562, 636, 548, 628, 636, 633, 554, 704, 547, 616, 567, 626, 575, 650, 532, 646, 564, 613, 565, 765, 723, 868, 551, 677, 564, 682, 574, 588, 561, 776, 749, 761, 876, 740, 819, 741, 890, 725, 839, 746, 841, 671, 887, 750, 907, 727, 822, 810, 909, 746, 848, 752, 833, 718, 700, 788, 728, 817, 746, 698, 793, 825, 819, 887, 840, 878, 776, 780, 790, 819, 784, 978, 805]
y2_20000 = [03123, 1307, 1131, 1223, 897, 1113, 867, 981, 894, 956, 1048, 1110, 836, 840, 910, 887, 975, 1014, 875, 872, 1057, 923, 1042, 1022, 983, 970, 945, 959, 1059, 994, 925, 926, 884, 1202, 835, 960, 931, 870, 909, 1070, 911, 1007, 1009, 972, 1061, 1109, 903, 873, 934, 866, 869, 1142, 971, 863, 829, 1027, 888, 1254, 892, 914, 821, 932, 853, 1104, 856, 932, 840, 942, 816, 1118, 835, 927, 887, 913, 981, 1034, 1611, 850, 967, 867, 1131, 870, 986, 874, 954, 849, 1159]
x1_20000 = [i for i in range(len(y1_20000)) ]
x2_20000 = [i for i in range(len(y2_20000)) ]
y1_50000 = [4614, 2592, 1691, 1719, 1864, 1637, 2565, 1490, 1597, 2285, 1473, 1519, 1571, 1649, 1630, 1492, 1522, 1591, 2218, 1611, 1523, 1499, 2412, 1571, 1435, 1590, 2342, 1429, 1523, 1625, 1552, 1425, 2522, 1563, 1445, 1502, 2458, 1647, 1491, 1694, 2512, 1701, 1466, 1607, 2421, 1442, 1675, 1692, 1602, 1600, 1510, 1565, 2240, 1622, 1421, 1571, 1656, 1402, 1484]
y2_50000 = [4965, 3029, 1966, 2111, 2107, 2063, 1955, 2263, 3386, 1940, 1937, 1986, 2933, 2039, 1928, 2872, 2026, 1990, 1921, 2184, 2035, 1936, 2023, 1985, 2214, 2353, 2016, 1906, 2026, 2171, 2756, 2016, 1909, 2101, 2073, 2424, 2358, 1963, 2900, 2092, 1970, 2032, 2812, 1897, 1977, 2058, 2240, 2052, 3001, 1977, 2160, 2160, 2527, 1853, 1980, 3090, 2318, 2056, 2255, ]
x1_50000 = [i for i in range(len(y1_50000)) ]
x2_50000 = [i for i in range(len(y1_50000)) ]
plt.figure(figsize=(8, 4))  # 创建绘图对象
y1_5000_v = [sum(y_5000[:500])/500 ]*500
y2_5000_v = [sum(y_5000[500:])/500 ]*500
y1_20000_v =[ sum(y1_20000[:])/len(y1_20000)]*len(y1_20000)
y2_20000_v =[ sum(y2_20000[:])/len(y2_20000)]*len(y2_20000)
y1_50000_v =[ sum(y1_50000)/len(y1_50000)]*len(y1_50000)
y2_50000_v =[ sum(y2_50000)/len(y2_50000)]*len(y2_50000)
plt.xlabel(u"次数", fontproperties=font)  # X轴标签
plt.ylabel(u"时间", fontproperties=font)   # Y轴标签
plt.title(u"库中5000", fontproperties=font)  # 图标题
 #  5000图
plt.ylim(0, 500)
plt.plot(x_5000, y1_5000, "b", linewidth=1)
plt.plot(x_5000, y1_5000_v, "b", linewidth=1)
plt.text(500, y1_5000_v[0]-25, y1_5000_v[0])
plt.plot(x_5000, y2_5000, "r", linewidth=1)
plt.plot(x_5000, y2_5000_v, "r", linewidth=1)
plt.text(500, y2_5000_v[0]+25, y2_5000_v[0])
plt.text(500, 0, u"时差("+str(y2_5000_v[0]-y1_5000_v[0])+u")", fontproperties=font)

plt.savefig("5000.jpg")  # 保存图
plt.show()   # 显示图

#  20000图
plt.title(u"库中20000", fontproperties=font)  # 图标题
plt.xlabel(u"次数", fontproperties=font)  # X轴标签
plt.ylabel(u"时间", fontproperties=font)   # Y轴标签
plt.ylim(0, max(y1_20000)+500)
plt.plot(x1_20000, y1_20000, "b", linewidth=1)
plt.plot(x1_20000, y1_20000_v, "b", linewidth=1)
plt.text(len(x1_20000)+3, y1_20000_v[0], y1_20000_v[0])
plt.plot(x2_20000, y2_20000, "r", linewidth=1)
plt.plot(x2_20000, y2_20000_v, "r", linewidth=1)
plt.text(len(x2_20000)+3, y2_20000_v[0], y2_20000_v[0])
plt.text(len(x1_20000), 0, u"时差("+str(y2_20000_v[0]-y1_20000_v[0])+u")", fontproperties=font)
plt.savefig("20000.jpg")  # 保存图
plt.show()   # 显示图

# 50000图
plt.title(u"库中50000", fontproperties=font)  # 图标题
plt.xlabel(u"次数", fontproperties=font)  # X轴标签
plt.ylabel(u"时间", fontproperties=font)   # Y轴标签
plt.ylim(0, max(y1_50000)+500)
plt.plot(x1_50000, y1_50000, "b", linewidth=1)
plt.plot(x1_50000, y1_50000_v, "b", linewidth=1)
plt.text(len(x1_50000)+3, y1_50000_v[0], y1_50000_v[0])
plt.plot(x2_50000, y2_50000, "r", linewidth=1)
plt.plot(x2_50000, y2_50000_v, "r", linewidth=1)
plt.text(len(x2_50000)+3, y2_50000_v[0], y2_50000_v[0])
plt.text(len(x2_50000), 0, u"时差("+str(y2_50000_v[0]-y1_50000_v[0])+u")", fontproperties=font)
plt.savefig("50000.jpg")  # 保存图
plt.show()   # 显示图

# 20000加条件图
plt.title(u"库中20000加条件", fontproperties=font)  # 图标题
plt.xlabel(u"次数", fontproperties=font)  # X轴标签
plt.ylabel(u"时间", fontproperties=font)   # Y轴标签
y1c_20000 = [733, 960, 671, 714, 681, 734, 644, 729, 657, 729, 786, 697, 719, 703, 672, 881, 761, 756, 787, 713, 784, 714, 998, 716, 698, 683, 907, 725, 653, 610, 689, 754, 719, 646, 687, 615, 699, 815, 837, 633, 765, 673, 951, 648, 675, 663, 729, 721, 701, 696, 610, 771, 697, 855, 646, 760, 630, 982, 768, 909, 746, 728, 858, 998, 686, 771, 745, 874, 638, 747, 778, 777, 760, 839, 657, 716, 650, 738, 842, 700, 746, 707, 832, 698, 688, 596, 684, 637, 766, 758, 649, 598, 666, 634, 670, 788, 658, 657, 660, 622]
y1c_20000_v = [sum(y1c_20000)/100]*100
y2c_20000 = [831, 949, 1050, 859, 889, 970, 1136, 1032, 962, 881, 892, 985, 770, 853, 805, 993, 931, 906, 886, 904, 999, 898, 956, 914, 940, 830, 908, 853, 918, 1006, 1202, 816, 849, 1039, 915, 837, 880, 967, 1075, 923, 881, 832, 1023, 936, 792, 1136, 1025, 942, 1050, 1119, 1120, 964, 891, 882, 969, 1223, 833, 958, 880, 859, 1024, 934, 1382, 959, 1038, 850, 971, 844, 1042, 893, 901, 874, 884, 931, 925, 859, 936, 1281, 885, 857, 885, 863, 1038, 856, 859, 918, 893, 986, 874, 866, 829, 1080, 811, 917, 818, 1058, 791, 930, 813, 984]
y2c_20000_v = [sum(y2c_20000)/100]*100
xc_20000=[i for i in range(0, 100)]
plt.ylim(0, max(y1c_20000)+500)
plt.plot(xc_20000, y1c_20000, "b", linewidth=1)
plt.plot(xc_20000, y1c_20000_v, "b", linewidth=1)
plt.text(len(xc_20000)+3, y1c_20000_v[0], y1c_20000_v[0])
plt.plot(xc_20000, y2c_20000, "r", linewidth=1)
plt.plot(xc_20000, y2c_20000_v, "r", linewidth=1)
plt.text(len(xc_20000)+3, y2c_20000_v[0], y2c_20000_v[0])
plt.text(len(xc_20000), 0, u"时差("+str(y2_50000_v[0]-y1_50000_v[0])+u")", fontproperties=font)
plt.savefig(u"20000加条件图.jpg")   # 保存图
plt.show()   # 显示图
